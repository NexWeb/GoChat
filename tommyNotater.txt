/*
																	NOTES:
	Key distribution problem:
		How do we distribute the key in a safe way? Can, as of now, be picked up with
		a packet sniffer since it is sent in plaintext.

	Features to add:
	#1: Let server send messages. In that case, let server use commands like !quit or !makeroom.
				TO DISCUSS 1: Is server message a wide broadcast or for a specified room? E.g lobby.
	#2: We need to save all data to JSON objects instead of saving it to the ram.
			To do this we need to use channels to be able to exchange and edit data
			from and to a go routine.
				TO DISCUSS 1:
						In case of using JSON objects for saving data, do we delete all files
						after server is closed or do we keep them? How does that look from
						a security perspective?
						Do we hash or encrypt data in the json files? If so, what technique
						do we use to hash/encrypt this data?
	#3: Nickname for each client
				TO DISCUSS 1:
					Should clients only be allowed to set nick on startup to remove confusion
					or should clients always be able to change nickname with a command? e.g !nick [nickname].
	#4: Let users choose what IP and port to connect to upon startup.
	#5: Set different privileges for different users? Admin, moderator, user etc.
	#6: Display amount of clients in a room on !room command. E.g - Lobby (3 clients).
	#7: Add a docker version of this server for easy setup?
	#8: Some other way to make the setup and use of this chat easier for everyone?


	Bigger implementations for the future:
	#1: Implement a file sender?
				TO DISCUSS 1:
					Is it a implementation that is useful for our chat?
				TO DISCUSS 2:
					How do we make the filesender as easy to use as possible?
	#2: Public key encryption implementation? E.g Diffie Hellman
				TO DISCUSS 1:
					How do we distribute the key pair? Keep in mind, every message has to
					be encrypted with the reciepients public key. Therefore we always have
					to keep track of everyones public key.
				TO DISCUSS 2:
					Where do we create the key pair? On the server or on the client?
				TO DISCUSS 3:
					How is a message sent to everyone? On the other side, how is a message
					sent to only e.g client in a specified chatroom.
*/
